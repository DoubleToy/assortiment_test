# Generated by Django 4.0.6 on 2022-08-17 09:50

from django.db import migrations
from django.contrib.auth.models import Group, Permission


def add_permission(apps, schema_editor):
    group = Group.objects.filter(name="Бухгалтер").first()
    for perm in Permission.objects.all():
        if perm.codename == 'change_settings':
            group.permissions.add(perm)
        if perm.codename == 'view_settings':
            group.permissions.add(perm)
    group = Group.objects.filter(name="Раскройщик").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_dailyproductionplan':
            group.permissions.add(perm)
        if perm.codename == 'change_dailyproductionplan':
            group.permissions.add(perm)
        if perm.codename == 'view_dailyproductionplan':
            group.permissions.add(perm)
        if perm.codename == 'add_typematerials':
            group.permissions.add(perm)
        if perm.codename == 'change_typematerials':
            group.permissions.add(perm)
        if perm.codename == 'view_typematerials':
            group.permissions.add(perm)
        if perm.codename == 'add_workperformed':
            group.permissions.add(perm)
        if perm.codename == 'change_workperformed':
            group.permissions.add(perm)
        if perm.codename == 'view_workperformed':
            group.permissions.add(perm)
    group = Group.objects.filter(name="Технолог").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_typeproduct':
            group.permissions.add(perm)
        if perm.codename == 'change_typeproduct':
            group.permissions.add(perm)
        if perm.codename == 'view_typeproduct':
            group.permissions.add(perm)
        if perm.codename == 'delete_typeproduct':
            group.permissions.add(perm)
    group = Group.objects.filter(name="Швея").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_factofexecution':
            group.permissions.add(perm)
        if perm.codename == 'change_factofexecution':
            group.permissions.add(perm)
        if perm.codename == 'view_factofexecution':
            group.permissions.add(perm)
        if perm.codename == 'delete_factofexecution':
            group.permissions.add(perm)
    group = Group.objects.filter(name="Кладовщик").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_warehouse':
            group.permissions.add(perm)
        if perm.codename == 'change_warehouse':
            group.permissions.add(perm)
        if perm.codename == 'view_warehouse':
            group.permissions.add(perm)
        if perm.codename == 'delete_warehouse':
            group.permissions.add(perm)


def remove_permission(apps, schema_editor):
    group = Group.objects.filter(name="Бухгалтер").first()
    for perm in Permission.objects.all():
        if perm.codename == 'change_settings':
            group.permissions.remove(perm)
        if perm.codename == 'view_settings':
            group.permissions.remove(perm)
    group = Group.objects.filter(name="Раскройщик").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_dailyproductionplan':
            group.permissions.remove(perm)
        if perm.codename == 'change_dailyproductionplan':
            group.permissions.remove(perm)
        if perm.codename == 'view_dailyproductionplan':
            group.permissions.remove(perm)
        if perm.codename == 'add_typematerials':
            group.permissions.remove(perm)
        if perm.codename == 'change_typematerials':
            group.permissions.remove(perm)
        if perm.codename == 'view_typematerials':
            group.permissions.remove(perm)
        if perm.codename == 'add_workperformed':
            group.permissions.remove(perm)
        if perm.codename == 'change_workperformed':
            group.permissions.remove(perm)
        if perm.codename == 'view_workperformed':
            group.permissions.remove(perm)
    group = Group.objects.filter(name="Технолог").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_typeproduct':
            group.permissions.remove(perm)
        if perm.codename == 'change_typeproduct':
            group.permissions.remove(perm)
        if perm.codename == 'view_typeproduct':
            group.permissions.remove(perm)
        if perm.codename == 'delete_typeproduct':
            group.permissions.remove(perm)
    group = Group.objects.filter(name="Швея").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_factofexecution':
            group.permissions.remove(perm)
        if perm.codename == 'change_factofexecution':
            group.permissions.remove(perm)
        if perm.codename == 'view_factofexecution':
            group.permissions.remove(perm)
        if perm.codename == 'delete_factofexecution':
            group.permissions.remove(perm)
    group = Group.objects.filter(name="Кладовщик").first()
    for perm in Permission.objects.all():
        if perm.codename == 'add_warehouse':
            group.permissions.remove(perm)
        if perm.codename == 'change_warehouse':
            group.permissions.remove(perm)
        if perm.codename == 'view_warehouse':
            group.permissions.remove(perm)
        if perm.codename == 'delete_warehouse':
            group.permissions.remove(perm)


class Migration(migrations.Migration):
    dependencies = [
        ('customers', '0006_alter_settings_options'),
    ]

    operations = [
        migrations.RunPython(add_permission, remove_permission)
    ]
